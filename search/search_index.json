{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udcda MADR - Meu Acervo Digital de Romances","text":"<p>MADR \u00e9 uma API desenvolvida com FastAPI para gerenciar um acervo digital de romances, permitindo cadastro, consulta, atualiza\u00e7\u00e3o e remo\u00e7\u00e3o de autores, livros e contas de usu\u00e1rios. O projeto utiliza autentica\u00e7\u00e3o JWT, banco de dados PostgreSQL, arquitetura ass\u00edncrona e est\u00e1 pronto para uso com Docker. O software foi desenvolvido como projeto de conclus\u00e3o do curso FastAPI do Zero do canal Eduardo Mendes. </p>"},{"location":"#tecnologias-utilizadas","title":"\ud83d\ude80 Tecnologias Utilizadas","text":"<ul> <li>FastAPI: Framework web Python, r\u00e1pido e ass\u00edncrono para APIs.</li> <li>SQLAlchemy Async: ORM ass\u00edncrono para manipula\u00e7\u00e3o do banco de dados.</li> <li>PostgreSQL: Banco de dados relacional robusto.</li> <li>Docker: Containeriza\u00e7\u00e3o da aplica\u00e7\u00e3o e banco de dados.</li> <li>PyJWT: Gera\u00e7\u00e3o e valida\u00e7\u00e3o de tokens JWT.</li> <li>Pydantic: Valida\u00e7\u00e3o e serializa\u00e7\u00e3o de dados.</li> <li>pytest: Testes automatizados.</li> <li>ruff: Linter e formatador de c\u00f3digo.</li> </ul>"},{"location":"#modelagem-de-dados","title":"\ud83d\uddc2\ufe0f Modelagem de Dados","text":""},{"location":"#conta-de-usuario-account","title":"Conta de Usu\u00e1rio (<code>Account</code>)","text":"<ul> <li><code>id</code>: int</li> <li><code>username</code>: str (\u00fanico)</li> <li><code>email</code>: str (\u00fanico)</li> <li><code>password</code>: str (hash)</li> <li><code>created_at</code>: datetime</li> <li><code>updated_at</code>: datetime</li> </ul>"},{"location":"#autor-author","title":"Autor (<code>Author</code>)","text":"<ul> <li><code>id</code>: int</li> <li><code>name</code>: str (\u00fanico)</li> <li><code>created_at</code>: datetime</li> <li><code>updated_at</code>: datetime</li> <li><code>books</code>: lista de livros associados - refer\u00eancia a <code>Book</code> (objeto relacionado)</li> </ul>"},{"location":"#livro-book","title":"Livro (<code>Book</code>)","text":"<ul> <li><code>id</code>: int</li> <li><code>title</code>: str (\u00fanico)</li> <li><code>year</code>: int</li> <li><code>author_id</code>: int - refer\u00eancia ao autor</li> <li><code>author</code>: Autor (objeto relacionado)</li> <li><code>created_at</code>: datetime</li> <li><code>updated_at</code>: datetime</li> </ul>"},{"location":"#autenticacao-token-jwt","title":"\ud83d\udd12 Autentica\u00e7\u00e3o &amp; Token JWT","text":"<p>A autentica\u00e7\u00e3o \u00e9 feita via OAuth2 com JWT. O usu\u00e1rio obt\u00e9m um token de acesso ao fazer login, que deve ser enviado no header <code>Authorization: Bearer &lt;token&gt;</code> para acessar rotas protegidas.</p> <ul> <li>Endpoint de login: <code>POST /auth/token</code></li> <li>Endpoint de refresh: <code>POST /auth/refresh/token</code></li> </ul> <p>Exemplo de resposta: <pre><code>{\n  \"access_token\": \"&lt;jwt_token&gt;\",\n  \"token_type\": \"Bearer\"\n}\n</code></pre></p>"},{"location":"#principais-rotas","title":"\ud83c\udf10 Principais Rotas","text":""},{"location":"#livros","title":"\ud83d\udcd6 Livros","text":"<ul> <li><code>POST /books/</code> \u2014 Cria um novo livro (autenticado)</li> <li><code>GET /books/</code> \u2014 Lista livros, com filtros por t\u00edtulo e ano (autenticado)</li> <li><code>GET /books/{book_id}</code> \u2014 Detalha um livro (autenticado)</li> <li><code>PATCH /books/{book_id}</code> \u2014 Atualiza dados do livro (autenticado)</li> <li><code>DELETE /books/{book_id}</code> \u2014 Remove um livro (autenticado)</li> </ul>"},{"location":"#autores","title":"\ud83d\udc64 Autores","text":"<ul> <li><code>POST /authors/</code> \u2014 Cria um novo autor (autenticado)</li> <li><code>GET /authors/</code> \u2014 Lista autores, com filtro por nome (autenticado)</li> <li><code>GET /authors/{author_id}</code> \u2014 Detalha um autor (autenticado)</li> <li><code>PATCH /authors/{author_id}</code> \u2014 Atualiza dados do autor (autenticado)</li> <li><code>DELETE /authors/{author_id}</code> \u2014 Remove um autor (autenticado)</li> </ul>"},{"location":"#contas","title":"\ud83e\uddd1 Contas","text":"<ul> <li><code>POST /accounts/</code> \u2014 Cria uma nova conta de usu\u00e1rio</li> <li><code>GET /accounts/{account_id}</code> \u2014 Detalha uma conta (autenticado)</li> <li><code>PUT /accounts/{account_id}</code> \u2014 Atualiza dados da conta (autenticado)</li> <li><code>DELETE /accounts/{account_id}</code> \u2014 Remove uma conta (autenticado)</li> </ul>"},{"location":"#autenticacao","title":"\ud83d\udd11 Autentica\u00e7\u00e3o","text":"<ul> <li><code>POST /auth/token</code> \u2014 Gera token de acesso</li> <li><code>POST /auth/refresh/token</code> \u2014 Gera novo token de acesso</li> </ul>"},{"location":"#endpoints-publicos","title":"\ud83c\udfe0 Endpoints P\u00fablicos","text":"<ul> <li><code>GET /</code> \u2014 Mensagem \"Hello World!\"</li> <li><code>GET /hello</code> \u2014 P\u00e1gina HTML simples</li> </ul>"},{"location":"#uso-de-async","title":"\u26a1 Uso de Async","text":"<p>Toda a comunica\u00e7\u00e3o com o banco de dados \u00e9 feita de forma ass\u00edncrona usando <code>async def</code> e <code>AsyncSession</code> do SQLAlchemy, garantindo alta performance e escalabilidade.</p>"},{"location":"#docker","title":"\ud83d\udc33 Docker","text":"<p>O projeto j\u00e1 est\u00e1 pronto para rodar com Docker, incluindo banco de dados PostgreSQL:</p> <pre><code>docker-compose up --build\n</code></pre> <ul> <li>A aplica\u00e7\u00e3o estar\u00e1 dispon\u00edvel em <code>http://localhost:8000</code></li> <li>O banco de dados estar\u00e1 dispon\u00edvel na porta <code>5434</code></li> </ul>"},{"location":"#testes","title":"\ud83e\uddea Testes","text":"<p>Os testes automatizados cobrem rotas, autentica\u00e7\u00e3o, regras de neg\u00f3cio e integra\u00e7\u00e3o com o banco de dados. Para rodar os testes:</p> <p><pre><code>task test\n</code></pre> ou <pre><code>pytest -s -x --cov=madr -vv\n</code></pre></p> <ul> <li>Cobertura de testes \u00e9 gerada em <code>htmlcov/</code></li> <li>Factories e fixtures garantem isolamento e reprodutibilidade dos testes</li> </ul>"},{"location":"#estrutura-do-projeto","title":"\ud83d\udce6 Estrutura do Projeto","text":"<pre><code>madr/\n\u2502\n\u251c\u2500\u2500 madr/\n\u2502   \u251c\u2500\u2500 app.py\n\u2502   \u251c\u2500\u2500 models/\n\u2502   \u251c\u2500\u2500 routers/\n\u2502   \u251c\u2500\u2500 schemas/\n\u2502   \u251c\u2500\u2500 security/\n\u2502   \u251c\u2500\u2500 settings/\n\u2502   \u2514\u2500\u2500 utils/\n\u251c\u2500\u2500 tests/\n\u251c\u2500\u2500 docker-compose.yml\n\u251c\u2500\u2500 Dockerfile\n\u251c\u2500\u2500 entrypoint.sh\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"#desenvolvido-por","title":"Desenvolvido por","text":"<p>Samael Muniz Picoli</p>"}]}